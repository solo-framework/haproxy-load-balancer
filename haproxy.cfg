# reload config: docker kill -s HUP haproxy_load_balancer

global

# ВАЖНО!!!
	# nbproc  4
	# cpu-map  1 1
	# cpu-map  2 2
	# cpu-map  3 3
	# cpu-map  4 4

	maxconn 	15000
	# user        haproxy
	# group       haproxy
	daemon
	tune.bufsize 32768
	tune.ssl.default-dh-param 2048
	ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

	# Configure some default bind options
    #   - Disable SSLv3.0
    #   - Disable TLS Tickets
    ssl-default-bind-options no-sslv3 no-tls-tickets
	ssl-default-server-options no-sslv3

    # lower your record size to improve Time to First Byte (TTFB)
    tune.ssl.maxrecord 1400

    # Allow SSL sessions to last for ~2 hours in order to improve the session
    # hit rate.
    tune.ssl.lifetime 2h

    # Allow more entries in the session cache to improve session cache hit rate
	# each entry requires ~200 bytes of memory.
    tune.ssl.cachesize 500000

    # Lower the amount of space we reserve for header rewriting
	tune.maxrewrite 1024

resolvers dockerdns
	nameserver dockerowned 127.0.0.11:53
	timeout retry   1s	
	resolve_retries 10
	hold valid 1s

defaults
	mode http
	retries 3
	option http-server-close
	timeout connect 5000ms
	timeout client 50000ms
	timeout server 50000ms

	monitor-uri /_service_status		
	

# frontend web
# 	bind *:80
# 	mode http

# 	bind *:443 ssl crt /local-haproxy.ru.pem

# 	default_backend web-backend
# 	# default_backend web-backend-with-ssl


# backend under-construction
#     errorfile       503 /etc/haproxy/error/503.html


listen stats
  mode http
  bind *:9000
  stats enable
  stats hide-version
  stats uri     /proxystat #?stats
  stats realm   HAProxy Statistics
  stats auth    admin:password

backend web-backend-with-ssl
	balance roundrobin #source

	rspidel ^Server:.*

	option forwardfor header X-Real-IP

	http-request set-header X-Forwarded-Port %[dst_port]
	http-request add-header X-Forwarded-Proto https if { ssl_fc }	

	# cookie SERVERID insert indirect nocache		
	server web2 192.168.11.50:8091 check inter 2s rise 2 fall 3
	server web3 192.168.11.50:8092 check inter 2s rise 2 fall 3
	
backend under-construction

	mode http
	errorfile       503 /etc/haproxy/error/503.html
	rspidel ^Server:.*
	
	# http-response set-header Content-Type text/html;charset=UTF-8
	# balance roundrobin
	# server uc 192.168.11.50:8090 check inter 10s rise 2 fall 5
	# server uc uc-service:8191 check inter 2s rise 2 fall 5

	# option httpchk GET / HTTP/1.1\r\nHost:\ uc-service
	# server uc uc-service:80 check resolvers dockerdns resolve-prefer ipv4 inter 2s rise 2 fall 5
	server uc uc-service:80 check inter 2s rise 2 fall 5

frontend web
	bind  *:80
	mode http
	redirect scheme https code 301 if !{ ssl_fc }

frontend web_with_ssl
	mode tcp
	bind *:443 ssl crt /local-haproxy.ru.pem

	acl access_allowed src -f /whitelist.txt

	use_backend web-backend-with-ssl if access_allowed

	# это значение заменить динамически
	# для Страницы Under Construction значение "under-construction"
	# для production значение "web-backend-with-ssl"
	default_backend under-construction
	# default_backend web-backend-with-ssl

